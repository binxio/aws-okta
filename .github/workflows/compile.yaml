name: Compile app for various operating systems
on:
  push:
    branches: [ main ]

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: node_modules
          key: build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            build-${{ env.cache-name }}-
            build-

      # - name: Setup node
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 14.x

      - name: Install node_modules
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm ci

  test:
    runs-on: ubuntu-latest
    needs: [ prepare ]
    steps:
      - uses: actions/checkout@v3

      - name: Restore node_modules from cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            build-${{ env.cache-name }}-
            build-

      - name: Unit tests
        run: npm run test

  
  # compile-ubuntu:
  #   name: Compile app for Ubuntu
  #   needs: [ prepare ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #     - run: |
  #        npm ci && npm run package:linux

  compile-windows:
    name: compile windows build
    needs: [ prepare, test ]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3

    - name: Restore node_modules from cache
      uses: actions/cache@v3
      with:
        path: node_modules
        key: build-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
            build-${{ env.cache-name }}-
            build-
    - run: |
        npm run package:win

  compile-macos:
    name: compile mac build
    needs: [ prepare, test ]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Restore node_modules from cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            build-${{ env.cache-name }}-
            build-
      - run: |
          npm install dmg-license && npm run package:mac

      